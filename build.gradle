plugins {
    id 'java'
    id 'war'
}

group 'gradle_springmvc_mybatis'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}
configurations {
    mybatisGenerator
}
dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    //mybatis依赖
    compile 'org.mybatis:mybatis:3.4.6'
    //mysql依赖
    compile 'mysql:mysql-connector-java:5.1.45'
    //spring依赖
    compile 'org.springframework:spring-webmvc:5.1.1.RELEASE'
    compile 'org.springframework:spring-beans:5.1.1.RELEASE'
    compile 'org.springframework:spring-context:5.1.1.RELEASE'
    compile 'org.springframework:spring-context-support:5.1.1.RELEASE'
    compile 'org.springframework:spring-web:5.1.1.RELEASE'
    compile 'org.springframework:spring-tx:5.1.1.RELEASE'
    compile 'org.springframework:spring-jdbc:5.1.1.RELEASE'
    compile 'org.springframework:spring-test:5.1.1.RELEASE'
    //mybatis-spring整合
    compile 'org.mybatis:mybatis-spring:1.3.2'
    //数据库连接池
    compile 'com.alibaba:druid:1.1.12'
    //filter  servlet
    compile 'javax.servlet:javax.servlet-api:4.0.1'
    compile 'javax.servlet:jstl:1.2'
    //    mybatis-generator mybatis逆向
    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.7'
    mybatisGenerator 'mysql:mysql-connector-java:5.1.45'
    mybatisGenerator 'tk.mybatis:mapper:4.0.4'


}
//idea gradle之mybatis-generator使用 https://blog.csdn.net/qq_36666651/article/details/79560228?utm_source=blogxgwz0

def getDbProperties = {
    def properties = new Properties()
    file("src/main/resources/myBatisGenerator/jdbc_config.properties").withInputStream { inputStream ->
        properties.load(inputStream)
    }
    properties
}

task mybatisGenerator << {
    def properties = getDbProperties()
    ant.properties['targetProject'] = projectDir.path
    ant.properties['driverClass'] = properties.getProperty("jdbc.driverClassName")
    ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
    ant.properties['userId'] = properties.getProperty("jdbc.username")
    ant.properties['password'] = properties.getProperty("jdbc.password")
    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
    ant.properties['modelPackage'] = properties.getProperty("package.model")
    ant.properties['mapperPackage'] = properties.getProperty("package.mapper")
    ant.properties['sqlMapperPackage'] = properties.getProperty("package.xml")
    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
    ant.mbgenerator(overwrite: true,
            configfile: 'src/main/resources/myBatisGenerator/generatorConfig.xml', verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'modelPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')
        }
    }
}